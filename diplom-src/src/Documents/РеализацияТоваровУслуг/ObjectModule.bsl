
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//ВКМ_НачалоДоработки_СмирноваСветлана_26.02.2024_Диплом
Процедура ВыполнитьАвтозаполнение() Экспорт
	
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	
	Если ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) 
		И ЗначениеЗаполнено(НоменклатураАбонентскаяПлата) Тогда
		
		Товары.Очистить();
		
		ДанныеДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВКМ_СуммаАбоненскойПлаты");
		
		Если ЗначениеЗаполнено(ДанныеДоговора.ВКМ_СуммаАбоненскойПлаты) Тогда
			
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Номенклатура = НоменклатураАбонентскаяПлата;
			НоваяСтрока.Сумма = ДанныеДоговора.ВКМ_СуммаАбоненскойПлаты;
			
		КонецЕсли;
		
		МесяцДокумента = Месяц(Дата);
		ДанныеПоВыполненнойРаботе = ПроверитьВыполнениеРабот(МесяцДокумента, Договор);
		
		Если ДанныеПоВыполненнойРаботе.ЕстьРабота Тогда
			
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Номенклатура = НоменклатураРаботыСпециалиста;
			НоваяСтрока.Количество = ДанныеПоВыполненнойРаботе.КоличествоЧасов;
			НоваяСтрока.Сумма = ДанныеПоВыполненнойРаботе.Сумма;
			
		КонецЕсли;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры //ВКМ_ОкончаниеДоработки

#КонецОбласти	
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
	//ВКМ_НачалоДоработки_СмирноваСветлана_26.02.2024_Диплом
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВКМ_ОбслуживаниеКлиентов") Тогда
		ВыполнитьАвтозаполнение();
	КонецЕсли; //ВКМ_ОкончаниеДоработки
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

//ВКМ_НачалоДоработки_СмирноваСветлана_27.02.2024_Диплом
Функция ПроверитьВыполнениеРабот(Месяц, Договор)

	ДанныеПоРаботе = Новый Структура("ЕстьРабота, КоличествоЧасов, Сумма");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ВКМ_ВыполненныеКлиентуРаботы.КоличествоЧасов) КАК КоличествоЧасов,
		|	СУММА(ВКМ_ВыполненныеКлиентуРаботы.СуммаКОплате) КАК СуммаКОплате,
		|	ВКМ_ВыполненныеКлиентуРаботы.Договор КАК Договор
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы КАК ВКМ_ВыполненныеКлиентуРаботы
		|ГДЕ
		|	МЕСЯЦ(ВКМ_ВыполненныеКлиентуРаботы.Период) = &Месяц
		|	И ВКМ_ВыполненныеКлиентуРаботы.Договор = &Договор
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ВыполненныеКлиентуРаботы.Договор";
	
	Запрос.УстановитьПараметр("Месяц", Месяц);
	Запрос.УстановитьПараметр("Договор", Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ДанныеПоРаботе.Вставить("ЕстьРабота", Ложь);
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеПоРаботе.Вставить("ЕстьРабота", Истина);
		ДанныеПоРаботе.Вставить("КоличествоЧасов", Выборка.КоличествоЧасов);
		ДанныеПоРаботе.Вставить("Сумма", Выборка.СуммаКОплате);
		
	КонецЦикла;
	
	Возврат ДанныеПоРаботе;
	
КонецФункции //ВКМ_ОкончаниеДоработки

#КонецОбласти

#КонецЕсли
