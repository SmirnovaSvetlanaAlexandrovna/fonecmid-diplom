#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДвижения();
	
КонецПроцедуры 

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_Удержания.Записывать = Истина;
	
	Оклад = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад;
	Отпуск = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск;
	ПроцентОтРабот = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентОтРабот;
	НДФЛ = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.НДФЛ;
	БазовыйПериодНачало = ДобавитьМесяц(ТекущаяДата(), -12);
	БазовыйПериодКонец = ТекущаяДата();
	
	Для Каждого Строка Из Начисления Цикл
		
       Если ТипЗнч(Строка.ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления") Тогда
			
			Если Строка.ВидРасчета = Оклад Тогда
			
				Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
				Движение.ПериодРегистрации = Дата;
				Движение.Регистратор = Ссылка;
				Движение.ПериодДействияНачало = Строка.ДатаС;
				Движение.ПериодДействияКонец = Строка.ДатаПо;
				Движение.Сторно = Ложь;
				Движение.ВидРасчета = Оклад;
				Движение.Сотрудник = Строка.Сотрудник;
				Движение.ГрафикРаботы = Строка.ГрафикРаботы;
				
			ИначеЕсли Строка.ВидРасчета = Отпуск Тогда
				
				Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
				Движение.ПериодРегистрации = Дата;
				Движение.Регистратор = Ссылка;
				Движение.ПериодДействияНачало = Строка.ДатаС;
				Движение.ПериодДействияКонец = Строка.ДатаПо;
				Движение.БазовыйПериодНачало = БазовыйПериодНачало;
				Движение.БазовыйПериодКонец = БазовыйПериодКонец;
				Движение.Сторно = Ложь;
				Движение.ВидРасчета = Отпуск;
				Движение.Сотрудник = Строка.Сотрудник;
				Движение.ГрафикРаботы = Строка.ГрафикРаботы;				
				
				Движения.ВКМ_ОтпускаСотрудников.Записывать = Истина;
				Движение = Движения.ВКМ_ОтпускаСотрудников.Добавить();
				Движение.Период = Дата;
				Движение.Сотрудник = Строка.Сотрудник;
				Движение.КоличествоДнейОтпускаФакт = (Строка.ДатаПо - Строка.ДатаС) / 86400;
				
			ИначеЕсли Строка.ВидРасчета = ПроцентОтРабот Тогда
				
				Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
				Движение.ПериодРегистрации = Дата;
				Движение.Регистратор = Ссылка;
				Движение.ПериодДействияНачало = Строка.ДатаС;
				Движение.ПериодДействияКонец = Строка.ДатаПо;
				Движение.Сторно = Ложь;
				Движение.ВидРасчета = ПроцентОтРабот;
				Движение.Сотрудник = Строка.Сотрудник;
				Движение.ГрафикРаботы = Строка.ГрафикРаботы;
				Движение.Результат = ПолучитьРасчетПоПроцентуЗаПериод(Строка.Сотрудник, Строка.ДатаС, Строка.ДатаПо);
				
			ИначеЕсли Строка.ВидРасчета = НДФЛ Тогда
				
				Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
				Движение.ПериодРегистрации = Дата;
				Движение.Регистратор = Ссылка;
				Движение.ПериодДействияНачало = Строка.ДатаС;
				Движение.ПериодДействияКонец = Строка.ДатаПо;
				Движение.БазовыйПериодНачало = Строка.ДатаС;
				Движение.БазовыйПериодКонец = Строка.ДатаПо;
				Движение.Сторно = Ложь;
				Движение.ВидРасчета = НДФЛ;
				Движение.Сотрудник = Строка.Сотрудник;
				Движение.ГрафикРаботы = Строка.ГрафикРаботы;
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Строка.ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ВКМ_Удержания") Тогда
			
			Движение = Движения.ВКМ_Удержания.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.Регистратор = Ссылка;
			Движение.Сторно = Ложь;
			Движение.ВидРасчета = Строка.ВидРасчета;
			Движение.Сотрудник = Строка.Сотрудник;
			Движение.Результат = Строка.Размер;
			
		КонецЕсли;
		
    КонецЦикла;    
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	
	РасчетОклада();
	РасчетОтпуска();
	РасчетНДФЛ();
	
	СформироватьДвиженияВзаиморасчетыПоСотрудникам();
		
КонецПроцедуры

Процедура РасчетОклада()

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
    Запрос.Текст = ТекстЗапроса_РасчетОклада();
    
    Запрос.УстановитьПараметр("Период", Дата);
    Запрос.УстановитьПараметр("Ссылка", Ссылка);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    Выборка = РезультатЗапроса.Выбрать();
    
	Пока Выборка.Следующий() Цикл
		
        Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];  
        Движение.Результат = Выборка.Оклад * Выборка.Факт / Выборка.План;
		Движение.ОтработаноДней = Выборка.Факт;
		
    КонецЦикла;  
    
    Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РасчетОтпуска()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Отпуск = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск;
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса_РасчитатьОтпуск();
		
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Отпуск", Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
			
		КоличествоДнейОтпуска = Выборка.КоличествоДнейОтпуска;
		ОтработаноДней = Выборка.ОтработаноДней;
		СуммаЗа12Месяцев = Выборка.СуммаЗа12Месяцев;
		
		Результат = (СуммаЗа12Месяцев/ОтработаноДней) * КоличествоДнейОтпуска;
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Результат = Результат;
		
	КонецЦикла;
		
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РасчетНДФЛ()
	
	УстановитьПривилегированныйРежим(Истина);
	
	НДФЛ = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.НДФЛ;
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса_РасчитатьНДФЛ();
		
	Измерение = Новый Массив;
	Измерение.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерение", Измерение);
	Запрос.УстановитьПараметр("НДФЛ", НДФЛ);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
					
		Результат = Выборка.РезультатБаза * 13 / 100;
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Результат = Результат;
		
	КонецЦикла;
		
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура СформироватьДвиженияВзаиморасчетыПоСотрудникам()

	УстановитьПривилегированныйРежим(Истина);
	
	НДФЛ = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.НДФЛ;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса_СформироватьДвиженияВзаиморасчетыПоСотрудникам();
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("НДФЛ", НДФЛ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		
		Сумма = Выборка.ОсновноеНачисление - Выборка.Удержание - Выборка.НДФЛ;
				
		Если Сумма >= 0 Тогда
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Иначе
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Сумма = - Сумма; 
		КонецЕсли;
		
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник; 
		Движение.Сумма = Сумма;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьРасчетПоПроцентуЗаПериод(Сотрудник, НачалоПериода, КонецПериода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ВКМ_ВыполненныеСотрудникомРаботы.СуммаКОплате) КАК СуммаКОплате
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы КАК ВКМ_ВыполненныеСотрудникомРаботы
		|ГДЕ
		|	ВКМ_ВыполненныеСотрудникомРаботы.Период >= &НачалоПериода
		|	И ВКМ_ВыполненныеСотрудникомРаботы.Период <= &КонецПериода
		|	И ВКМ_ВыполненныеСотрудникомРаботы.Сотрудник = &Сотрудник";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.СуммаКОплате;	
	КонецЦикла;
	
	Возврат 0;
	
КонецФункции


#Область ТекстыЗапросов

Функция ТекстЗапроса_РасчетОклада()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК План,
	               |	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	               |			Регистратор = &Ссылка
	               |				И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Оклад)) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
	               |				&Период,
	               |				Сотрудник В
	               |					(ВЫБРАТЬ
	               |						ОсновныеНачисления.Сотрудник КАК Сотрудник
	               |					ИЗ
	               |						РегистрРасчета.ВКМ_ОсновныеНачисления КАК ОсновныеНачисления
	               |					ГДЕ
	               |						ОсновныеНачисления.Регистратор = &Ссылка
	               |						И ОсновныеНачисления.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Оклад))) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	               |		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапроса_РасчитатьОтпуск()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
	               |	РАЗНОСТЬДАТ(ОсновныеНачисленияДанныеГрафика.ПериодДействияНачало, ОсновныеНачисленияДанныеГрафика.ПериодДействияКонец, ДЕНЬ) КАК КоличествоДнейОтпуска,
	               |	ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(ОсновныеНачисленияБазаДополнительныеНачисления.РезультатБаза, 0) КАК СуммаЗа12Месяцев,
	               |	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	               |	ОсновныеНачисленияБазаОсновныеНачисления.ОтработаноДнейБаза КАК ОтработаноДней
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	               |			Регистратор = &Ссылка
	               |				И ВидРасчета = &Отпуск) КАК ОсновныеНачисленияДанныеГрафика
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
	               |				&Измерения,
	               |				&Измерения,
	               |				,
	               |				Регистратор = &Ссылка
	               |					И ВидРасчета = &Отпуск) КАК ОсновныеНачисленияБазаОсновныеНачисления
	               |		ПО ОсновныеНачисленияДанныеГрафика.НомерСтроки = ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(
	               |				&Измерения,
	               |				&Измерения,
	               |				,
	               |				Регистратор = &Ссылка
	               |					И ВидРасчета = &Отпуск) КАК ОсновныеНачисленияБазаДополнительныеНачисления
	               |		ПО ОсновныеНачисленияДанныеГрафика.НомерСтроки = ОсновныеНачисленияБазаДополнительныеНачисления.НомерСтроки";
	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапроса_РасчитатьНДФЛ()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СУММА(ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0)) КАК РезультатБаза,
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
	               |			&Измерение,
	               |			&Измерение,
	               |			,
	               |			ВидРасчета = &НДФЛ
	               |				И Регистратор = &Регистратор) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки";
	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапроса_СформироватьДвиженияВзаиморасчетыПоСотрудникам()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	               |	СУММА(ЕСТЬNULL(ВКМ_ОсновныеНачисления.Результат, 0)) КАК Результат
	               |ПОМЕСТИТЬ вт_ОсновныеНачисления
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	               |ГДЕ
	               |	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	               |	И ВКМ_ОсновныеНачисления.ВидРасчета <> &НДФЛ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_ОсновныеНачисления.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВКМ_Удержания.Сотрудник КАК Сотрудник,
	               |	СУММА(ЕСТЬNULL(ВКМ_Удержания.Результат, 0)) КАК Результат
	               |ПОМЕСТИТЬ вт_Удержания
	               |ИЗ
	               |	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	               |ГДЕ
	               |	ВКМ_Удержания.Регистратор = &Регистратор
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_Удержания.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	               |	СУММА(ЕСТЬNULL(ВКМ_ОсновныеНачисления.Результат, 0)) КАК НДФЛ
	               |ПОМЕСТИТЬ вт_НДФЛ
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	               |ГДЕ
	               |	ВКМ_ОсновныеНачисления.ВидРасчета = &НДФЛ
	               |	И ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВКМ_ОсновныеНачисления.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ЕСТЬNULL(вт_ОсновныеНачисления.Сотрудник, вт_Удержания.Сотрудник), вт_НДФЛ.Сотрудник) КАК Сотрудник,
	               |	ЕСТЬNULL(вт_ОсновныеНачисления.Результат, 0) КАК ОсновноеНачисление,
	               |	ЕСТЬNULL(вт_Удержания.Результат, 0) КАК Удержание,
	               |	ЕСТЬNULL(вт_НДФЛ.НДФЛ, 0) КАК НДФЛ
	               |ИЗ
	               |	вт_ОсновныеНачисления КАК вт_ОсновныеНачисления
	               |		ПОЛНОЕ СОЕДИНЕНИЕ вт_Удержания КАК вт_Удержания
	               |		ПО вт_ОсновныеНачисления.Сотрудник = вт_Удержания.Сотрудник
	               |		ПОЛНОЕ СОЕДИНЕНИЕ вт_НДФЛ КАК вт_НДФЛ
	               |		ПО вт_ОсновныеНачисления.Сотрудник = вт_НДФЛ.Сотрудник";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
